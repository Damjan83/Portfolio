@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

@font-face {
  font-family: "montserrat-regular";
  src: url("../assets/fonts/montserrat-regular-webfont.eot");
  src: url("../assets/fonts/montserrat-regular-webfont.eot?#iefix") format("embedded-opentype"), url("../assets/fonts/montserrat-regular-webfont.woff2") format("woff2"), url("../assets/fonts/montserrat-regular-webfont.woff") format("woff"), url("../assets/fonts/montserrat-regular-webfont.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
body {
  background-color: #000;
  color: #000000;
  font-family: "montserrat-regular";
  font-size: 16px;
}

body.dark {
  background-color: #fff;
  color: #FFFFFF;
}

img {
  max-width: 100%;
  width: 100%;
  height: auto;
}

header {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
}

.main-nav {
  width: 100%;
  max-width: 1180px;
  height: 4.375rem;
  margin: 0 auto;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
@media (min-width: 768px) {
  .main-nav {
    display: flex;
  }
}

.main-nav__menu {
  width: 100%;
  max-width: 73.75rem;
  height: 100%;
  margin: 0 auto;
  padding: 0;
  list-style: none;
  background-color: #000000;
  display: none;
  align-items: center;
  justify-content: flex-start;
}
.main-nav__menu.is-active {
  height: 100%;
  width: 100%;
  position: fixed;
  z-index: 2;
  top: 0;
  left: 0;
  background-color: #000000;
  overflow-x: hidden;
  display: block;
  padding-top: 4.75rem;
}
@media (min-width: 768px) {
  .main-nav__menu.is-active {
    display: none;
  }
}
@media (min-width: 768px) {
  .main-nav__menu {
    display: flex;
  }
}
@media (min-width: 768px) and (max-width: 1180px) {
  .main-nav__menu {
    margin-left: 1.875rem;
  }
}

.main-nav__menu-item {
  height: 100%;
  display: block;
  align-items: center;
}
.main-nav__menu-item.is-active {
  height: 3.125rem;
  display: block;
  padding-left: 2rem;
}
@media (min-width: 768px) {
  .main-nav__menu-item {
    display: flex;
  }
}

.main-nav__menu-link {
  height: 100%;
  display: flex;
  align-items: center;
  text-decoration: none;
  margin-right: 1.875rem;
  border-bottom: 3px solid transparent;
  font-size: 1.25rem;
  font-weight: bold;
  letter-spacing: 0.1875rem;
  color: #FFFFFF;
}
.main-nav__menu-link:hover {
  border-bottom: 3px solid #ffa818;
}

.main-nav__burger {
  display: block;
  cursor: pointer;
  margin: 0 1.25rem;
  z-index: 4;
  -webkit-tap-highlight-color: transparent;
}
@media (min-width: 768px) {
  .main-nav__burger {
    display: none;
  }
}

.main-nav__burger-line {
  width: 1.5625rem;
  height: 0.1875rem;
  background-color: #FFFFFF;
  margin: 0.3125rem;
  transition: all 0.4s ease;
}

.is-active .main-nav__burger-line1 {
  transform: rotate(-45deg) translate(-5px, 6px);
}

.is-active .main-nav__burger-line2 {
  opacity: 0;
}

.is-active .main-nav__burger-line3 {
  transform: rotate(45deg) translate(-5px, -6px);
}

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.switch {
  width: 100%;
  max-width: 6.25rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 1.25rem;
}

.switch__label {
  height: 1.875rem;
  width: 100%;
  max-width: 5.625rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #000000;
  border-radius: 25px;
  position: relative;
  border: 2px solid #FFFFFF;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
}

.switch__icon {
  width: 24px;
  height: 24px;
}

.switch__icon--sun {
  margin-right: 3px;
}

.switch__icon--moon {
  margin-left: 3px;
}

.switch__ball {
  height: 26px;
  width: 26px;
  background-color: #FFFFFF;
  position: absolute;
  top: 2px;
  left: 2px;
  border-radius: 50%;
  transition: transform 0.2s linear;
}

.switch__checkbox {
  opacity: 0;
  position: absolute;
}

.switch__checkbox:checked + .switch__label .switch__ball {
  transform: translateX(60px);
}

.arrow-down {
  width: 100%;
  height: auto;
  position: absolute;
  bottom: 50px;
}
@media (min-width: 768px) {
  .arrow-down {
    bottom: 0;
  }
}

.arrow {
  text-align: center;
  width: 1.875rem;
  margin: 0 auto;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
}

.bounce {
  -webkit-animation: bounce 2s infinite;
  animation: bounce 2s infinite;
}

@-webkit-keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-30px);
  }
  60% {
    transform: translateY(-15px);
  }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-30px);
  }
  60% {
    transform: translateY(-15px);
  }
}
.form {
  padding: 0 1.25rem;
  position: relative;
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .form {
    padding: 0;
    width: 50%;
  }
}
@media (min-width: 375px) and (max-width: 768px) {
  .form {
    align-items: center;
  }
}

.form__input, textarea {
  width: 100%;
  max-width: 31.25rem;
  display: flex;
  flex-direction: column;
  padding: 0.75rem;
  border: 0.0625rem solid #808080;
  border-radius: 0.25rem;
  box-sizing: border-box;
  resize: vertical;
}

input[type=submit] {
  color: #FFFFFF;
  padding: 0.75rem 1.25rem;
  border: none;
  border-radius: 0.3125rem;
  cursor: pointer;
}

.sub {
  height: 12.5rem;
}

.btn-get-in-touch {
  width: 7.1875rem;
  height: 2.375rem;
  margin-top: 1.25rem;
  border-radius: 0.3125rem;
  border: 0.0625rem solid #808080;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
}
.btn-get-in-touch__text {
  font-size: 0.75rem;
  font-weight: bold;
  text-transform: uppercase;
  margin: 0;
}

.has-error {
  border-color: #FF0000;
}

.form__error {
  font-size: 0.75em;
  font-weight: bold;
  letter-spacing: 0.0625rem;
  color: #FF0000;
  margin: 5px;
  visibility: hidden;
}

.contact__text {
  padding: 0 1.25rem;
}
@media (min-width: 768px) {
  .contact__text {
    width: 50%;
  }
}

.contact__text-desc {
  font-size: 1.1875em;
  color: #FFFFFF;
}

.icon-link {
  display: flex;
  justify-content: center;
  margin-bottom: 1.25rem;
  -webkit-tap-highlight-color: transparent;
}
@media (min-width: 768px) {
  .icon-link {
    justify-content: left;
  }
}

.icon-link__img {
  width: 2rem;
  height: auto;
  margin-right: 1.25rem;
  filter: grayscale(1) invert(1);
}
@media (min-width: 768px) {
  .icon-link__img {
    width: 2.5rem;
  }
}

.back-to-top {
  width: 100%;
  height: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 0.625rem;
}

.back-to-top__text {
  font-size: 1em;
  font-weight: bold;
  letter-spacing: 0.1875rem;
  text-transform: uppercase;
  color: #FFFFFF;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
}
.back-to-top__text:link {
  text-decoration: none;
}

.design-by {
  font-size: 0.625rem;
  font-weight: bold;
  letter-spacing: 0.1875rem;
  text-transform: uppercase;
  color: #FFFFFF;
  margin-top: 1.5rem;
}

.loader {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  display: none;
}

.loader__overlay {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  background-color: rgba(0, 0, 0, 0.8);
}

.loader__content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, 50%);
  color: #ffa818;
  font-size: 1rem;
  font-weight: bold;
}
.loader__content::after {
  content: "…";
  font-weight: bold;
  display: inline-block;
  overflow: hidden;
  -webkit-animation: dots steps(4, end) 2s infinite;
          animation: dots steps(4, end) 2s infinite;
  width: 0rem;
}
@-webkit-keyframes dots {
  to {
    width: 1.6rem;
  }
}
@keyframes dots {
  to {
    width: 1.6rem;
  }
}
@media (min-width: 768px) {
  .loader__content {
    font-size: 2rem;
  }
}
.is-success .loader__content {
  font-size: 1rem;
  text-align: center;
}
.is-success .loader__content::after {
  content: none;
}
@media (min-width: 768px) {
  .is-success .loader__content {
    font-size: 2rem;
  }
}
.has-error .loader__content {
  color: red;
  font-size: 0.8125rem;
  text-align: center;
}
.has-error .loader__content::after {
  content: none;
}
@media (min-width: 768px) {
  .has-error .loader__content {
    font-size: 2rem;
  }
}

@media (min-width: 768px) and (max-width: 1180px) {
  .wraper {
    margin: 0 30px;
  }
}

.dark .main-nav__menu {
  background-color: #FFFFFF;
}
.dark .main-nav__menu-link, .dark .about-me__title-text, .dark .about-me__text, .dark .skills__title-text, .dark .contact__title-text,
.dark .projects__title-text, .dark .text-title, .dark .text-desc, .dark .text-link, .dark .contact__text-desc, .dark .back-to-top__text,
.dark .design-by {
  color: #000000;
}
.dark .main-nav__burger-line {
  background-color: #000000;
}
.dark .skill-icons, .dark .project-laptop, .dark .made-whit-img, .dark .icon-link__img {
  filter: grayscale(0) invert(0);
}
.dark .about-me__photo-img {
  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
}

.about-me__title {
  display: flex;
  align-items: center;
  justify-content: center;
}

.about-me__title-text {
  font-size: 1.875rem;
  text-transform: uppercase;
  font-weight: bold;
  letter-spacing: 0.1875rem;
  color: #FFFFFF;
  border-bottom: 0.25rem solid #ffa818;
}

.about-me__container {
  width: 100%;
  height: auto;
  max-width: 1180px;
  margin: 3.125rem auto 0;
  display: block;
  justify-content: center;
}
@media (min-width: 768px) {
  .about-me__container {
    display: flex;
  }
}

.about-me__photo {
  width: 100%;
  height: auto;
  margin: 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
}
@media (min-width: 768px) {
  .about-me__photo {
    margin: 0;
    max-width: 35%;
  }
}

.about-me__photo-img {
  width: auto;
  height: auto;
  border-radius: 0.625rem;
  box-shadow: rgba(255, 255, 255, 0.35) 0px 5px 15px;
}

.about-me__text {
  width: 100%;
  font-size: 1.25em;
  font-weight: bold;
  color: #FFFFFF;
  padding: 0;
}
@media (min-width: 768px) {
  .about-me__text {
    display: block;
    padding: 0 2.5rem;
    max-width: 65%;
  }
}

.about-me__text-desc {
  padding: 0 1.25rem;
}
@media (min-width: 768px) {
  .about-me__text-desc {
    padding: 0;
  }
}

.container-welcome {
  width: 100%;
  max-width: 1180px;
  height: 70vh;
  color: #FFFFFF;
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin: 0 auto;
  align-items: center;
}
@media (min-width: 768px) {
  .container-welcome {
    height: 100vh;
    align-items: baseline;
  }
}
@media (max-width: 375px) {
  .container-welcome {
    width: auto;
    padding: 0 1.25rem;
    font-size: 0.8em;
  }
}

.dark .container-welcome {
  color: #000000;
}

.welcome__text {
  font-size: 0.8em;
  text-transform: uppercase;
  font-weight: bold;
  width: 100%;
  max-width: 19.5rem;
  letter-spacing: 3px;
}
@media (min-width: 768px) {
  .welcome__text {
    margin-left: 70px;
    font-size: 1.2em;
    max-width: 29.5rem;
  }
}
@media (min-width: 375px) and (max-width: 768px) {
  .welcome__text {
    font-size: 0.8em;
  }
}

.welcome__text-name, .welcome__text-desc-top, .welcome__text-desc-bottom {
  margin: 0;
}

.welcome__text-desc-top, .welcome__text-desc-bottom {
  margin-top: 10px;
}

.welcome__text-name {
  margin: 0;
  position: relative;
}

.text-name__title {
  padding: 16px 0;
}

.slide-bottom {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 4px;
  width: 0%;
  background-color: #ffa818;
  -webkit-animation: sideToLeft 2s ease forwards;
          animation: sideToLeft 2s ease forwards;
}

@-webkit-keyframes sideToLeft {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}

@keyframes sideToLeft {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.skills-icons__container {
  display: grid;
  padding: 0 1.25rem;
  -moz-column-gap: 3.125rem;
       column-gap: 3.125rem;
  row-gap: 3.125rem;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  text-align: center;
  place-items: center;
}
@media (min-width: 768px) {
  .skills-icons__container {
    padding: 0;
    grid-template-columns: repeat(5, minmax(0, 1fr));
    margin-top: 6.25rem;
  }
}
@media (min-width: 375px) and (max-width: 768px) {
  .skills-icons__container {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

.skill-icons {
  width: 33%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  filter: grayscale(1) invert(1);
}
@media (min-width: 768px) {
  .skill-icons {
    width: 25%;
  }
}

.skill-icons__text {
  color: #000000;
  font-weight: bold;
  letter-spacing: 0.125rem;
}

.dark .skill-icons__text {
  color: #000000;
}

.skill-icons__img {
  width: 100%;
  max-width: 4rem;
}

.project-desc {
  width: 100%;
  height: auto;
  max-width: 1180px;
  margin: 0 auto;
  position: relative;
}

.project-one, .project-two, .project-three, .project-four {
  width: 100%;
  display: flex;
  align-items: center;
  position: relative;
}
@media (min-width: 768px) {
  .project-one, .project-two, .project-three, .project-four {
    width: 50%;
  }
}

.project {
  display: flex;
  flex-direction: column;
  padding: 0 1.25rem;
  margin-top: 2.25rem;
}
.project:first-child {
  margin-top: 0;
}
@media (min-width: 768px) {
  .project {
    flex-direction: row;
    padding: 0;
    margin-top: 4.25rem;
  }
  .project:first-child {
    margin-top: 4.25rem;
  }
}

.project-reverse {
  flex-direction: column;
}
@media (min-width: 768px) {
  .project-reverse {
    flex-direction: row-reverse;
  }
}

.project-contact {
  display: flex;
  flex-direction: column-reverse;
  padding: 0 1.25rem;
}
@media (min-width: 768px) {
  .project-contact {
    flex-direction: row;
    margin-top: 2.25rem;
  }
}

.project-one__img, .project-two__img, .project-three__img, .project-four__img {
  width: 500px;
  height: auto;
}
@media (min-width: 375px) and (max-width: 768px) {
  .project-one__img, .project-two__img, .project-three__img, .project-four__img {
    justify-content: center;
  }
}

.project-info {
  width: 100%;
  display: flex;
  align-items: center;
  text-align: center;
}
@media (min-width: 768px) {
  .project-info {
    width: 50%;
    text-align: left;
  }
}
@media (min-width: 768px) and (max-width: 1180px) {
  .project-info {
    padding: 0.625rem;
  }
}

.text-title, .text-desc {
  font-size: 1.1875em;
  color: #FFFFFF;
}

.text-title {
  text-transform: uppercase;
}

.text-link {
  text-decoration: none;
  font-weight: bold;
  color: #FFFFFF;
  margin-right: 0.625rem;
}
.text-link:hover {
  color: #ffa818;
}

.made-whit {
  width: 100%;
  height: auto;
  display: flex;
  align-items: center;
  justify-content: center;
}
@media (min-width: 768px) {
  .made-whit {
    justify-content: flex-start;
  }
}

.made-whit-img {
  width: 3.125rem;
  margin-right: 0.9375rem;
  filter: grayscale(1) invert(1);
}

.num-one, .num-three {
  justify-content: left;
}
@media (min-width: 375px) and (max-width: 768px) {
  .num-one, .num-three {
    justify-content: center;
  }
}
@media (min-width: 768px) and (max-width: 1180px) {
  .num-one, .num-three {
    padding: 0.625rem;
  }
}

.num-two, .num-four {
  justify-content: right;
}
@media (min-width: 375px) and (max-width: 768px) {
  .num-two, .num-four {
    justify-content: center;
  }
}
@media (min-width: 768px) and (max-width: 1180px) {
  .num-two, .num-four {
    padding: 0.625rem;
  }
}

.container {
  width: 100%;
  height: auto;
  max-width: 1180px;
  margin: 4.25rem auto 0;
}

.skills__title, .projects__title, .contact__title {
  width: 100%;
  height: auto;
  display: flex;
  justify-content: center;
}

.skills__title-text, .projects__title-text, .contact__title-text {
  color: #FFFFFF;
  font-size: 1.875em;
  font-weight: bold;
  text-transform: uppercase;
  border-bottom: 0.25rem solid #ffa818;
  letter-spacing: 0.1875rem;
}

a {
  text-decoration: none;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
